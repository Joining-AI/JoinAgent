# 这段代码的版权属于2024年的微软公司。
# 并且这个代码是根据MIT许可证授权的。

# 这个文件包含了提示定义的代码。

GRAPH_EXTRACTION_PROMPT = """
- 目标 -
给定一段可能与活动相关的文本和一个实体类型列表，从文本中识别出所有这些类型的实体以及它们之间的关系。

- 步骤 -
1. 识别所有实体。对每个识别出的实体，提取以下信息：
   - 实体名称：首字母大写的实体名字
   - 实体类型：以下类型之一：[{entity_types}]
   - 实体描述：关于实体属性和活动的详细描述
   格式化每个实体为 ("entity"{tuple_delimiter}<实体名字>{tuple_delimiter}<实体类型>{tuple_delimiter}<实体描述>

2. 从步骤1中识别的实体中，找出所有明显相关联的（源实体，目标实体）对。
   对于每对相关实体，提取以下信息：
   - 源实体：在步骤1中识别的源实体的名字
   - 目标实体：在步骤1中识别的目标实体的名字
   - 关系描述：为什么你认为源实体和目标实体相互关联的解释
   - 关系强度：表示源实体和目标实体之间关系强度的数字分数
   格式化每个关系为 ("relationship"{tuple_delimiter}<源实体>{tuple_delimiter}<目标实体>{tuple_delimiter}<关系描述>{tuple_delimiter}<关系强度>)

3. 将步骤1和2中识别的所有实体和关系以英文形式返回为一个单一列表。用 **{record_delimiter}** 作为列表分隔符。

4. 完成后，输出 {completion_delimiter}

###########################
- 示例 -
###########################
示例 1：

实体类型：[人物, 技术, 任务, 组织, 地点]
文本：
...
（示例文本）

输出：
...
（示例输出）

示例 2：

实体类型：[人物, 技术, 任务, 组织, 地点]
文本：
...
（示例文本）

输出：
...
（示例输出）

示例 3：

实体类型：[人物, 角色, 技术, 组织, 事件, 地点, 概念]
文本：
...
（示例文本）

输出：
...
（示例输出）

#############################
- 真实数据 -
#############################
实体类型：{entity_types}
文本：{input_text}
#############################
输出：""

CONTINUE_PROMPT = "在上一次提取中漏掉了许多实体。请使用相同的格式将它们添加到下方：\n"
LOOP_PROMPT = "看起来可能还有一些实体被遗漏了。如果还有需要添加的实体，请回答YES | NO。\n"

